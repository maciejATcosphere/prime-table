{
  "name": "jasmine-custom-message",
  "description": "custom failure message on any jasmine assertion",
  "version": "0.6.1",
  "homepage": "https://github.com/avrelian/jasmine-custom-message",
  "author": {
    "name": "Sergey Radchenko",
    "email": "avrelian@yandex.ru",
    "url": "https://github.com/avrelian"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:avrelian/jasmine-custom-message.git"
  },
  "bugs": {
    "url": "https://github.com/avrelian/jasmine-custom-message/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/avrelian/jasmine-custom-message/blob/master/LICENSE"
    }
  ],
  "main": "jasmine-custom-message.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt": "~0.4.2",
    "grunt-jasmine-node": "~0.1.0",
    "diff": "~1.0.8",
    "es5-shim": "~2.3.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "jasmine",
    "error message",
    "failure message",
    "custom message"
  ],
  "readme": "jasmine-custom-message\r\n======================\r\n> **works with `jasmine v1.3.1`** (for work with `jasmine v2.0.0` see branch [`jasmine-2-0`](https://github.com/avrelian/jasmine-custom-message/tree/jasmine-2-0))\r\n\r\n\r\nThis script makes it possible to use your own failure message on any jasmine assertion.\r\n\r\n#### Example\r\n\r\n```\r\ndescribe('the story', function() {\r\n  it('should finish ok', function() {\r\n    since('all cats are grey in the dark').\r\n    expect('tiger').toEqual('kitty'); // => 'all cats are grey in the dark'\r\n  });\r\n});\r\n```\r\n\r\n\r\n## Simple\r\n\r\nAll the magic happens in `since` function. That returns an object with a property `expect`. That contains no more than a wrapped jasmine `expect` function. That returns jasmine `expectation` object with a specially defined `message` function. That can produce a custom failure message. That is generating based on a custom message you have supplied to `since` function as the first argument. That can be a primitive (except `null` and `undefined`), a function, or any other object. That is it.\r\n\r\n#### Example\r\n\r\n```\r\ndescribe('test', function() {\r\n  it('should be ok', function() {\r\n    since(function() {\r\n      return {'tiger': 'kitty'};\r\n    }).\r\n    expect(3).toEqual(4); // => '{\"tiger\":\"kitty\"}'\r\n  });\r\n});\r\n```\r\n\r\n\r\n## Unobtrusive\r\n\r\nYou can use jasmine as you did before, since `jasmine-custom-message` does not replace global jasmine `expect` function.\r\n\r\n#### Example\r\n\r\n```\r\ndescribe('test', function() {\r\n  it('should be ok', function() {\r\n    expect(3).toEqual(4); // => ordinary jasmine message\r\n  });\r\n});\r\n```\r\n\r\n\r\n## Powerful\r\n\r\nYou can use expected and actual value of the assertion in your custom message.\r\n\r\n#### Example\r\n\r\n```\r\ndescribe('test', function() {\r\n  it('should be ok', function() {\r\n    since(function(expected) {\r\n      return this.actual + ' =/= ' + expected;\r\n    }).\r\n    expect(3).toEqual(4); // => '3 =/= 4'\r\n  });\r\n});\r\n```\r\n\r\n## Front-end usage\r\n*  install the bower package from github\r\n```\r\nbower install jasmine-custom-message --save-dev\r\n```\r\n* include `jasmine-custom-message.js` into your HTML file next to `jasmine` script\r\n```\r\n<script src=\"PATH-TO/jasmine.js\"></script>\r\n<script src=\"PATH-TO/jasmine-custom-message.js\"></script>   \r\n```\r\n\r\n## Node.js usage\r\n\r\n*  install the bower package\r\n```\r\nbower install jasmine-custom-message --save-dev\r\n```\r\nor npm package\r\n```\r\nnpm install jasmine-custom-message --save-dev\r\n```\r\n\r\n*  require it in your spec file before your tests\r\n```\r\nrequire('jasmine-custom-message');\r\n```\r\n\r\n## Change log\r\n\r\n`v0.6.0` - 2014.01.18 - **BROKEN COMPATIBILITY!**\r\n  * all the magic moved into newly introduced `since` function\r\n  * restored automatic initiation of the script upon inclusion (browser) or require (Node.js)\r\n  * cleaned specs\r\n\r\n`v0.5.0` - 2014.01.15\r\n  * added support for nested message functions\r\n  * dropped automatic wrapping of jasmine `it` and `expect` functions in browsers\r\n  * added specs for Node.js\r\n  * added specs for browsers\r\n  * registered bower package\r\n  * made disambiguation and readability improvements\r\n\r\n`v0.2.0` - 2014.01.10 - **BROKEN COMPATIBILITY!**\r\n  * custom messages is supplied as the third argument for jasmine `it` function\r\n\r\n`v0.1.0` - 2014.01.08\r\n  * the first functional version\r\n\r\n\r\n## Release plan\r\n\r\n`v0.7.0` - some new features (based on requests from Issues)\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/avrelian/jasmine-custom-message/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n",
  "readmeFilename": "README.md",
  "_id": "jasmine-custom-message@0.6.1",
  "dist": {
    "shasum": "9da9e212f3be885aa903500f1efb434f9d17e7f5",
    "tarball": "http://registry.npmjs.org/jasmine-custom-message/-/jasmine-custom-message-0.6.1.tgz"
  },
  "_from": "jasmine-custom-message@0.6.1",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "avrelian",
    "email": "avrelian@yandex.ru"
  },
  "maintainers": [
    {
      "name": "avrelian",
      "email": "avrelian@yandex.ru"
    }
  ],
  "directories": {},
  "_shasum": "9da9e212f3be885aa903500f1efb434f9d17e7f5",
  "_resolved": "https://registry.npmjs.org/jasmine-custom-message/-/jasmine-custom-message-0.6.1.tgz"
}
